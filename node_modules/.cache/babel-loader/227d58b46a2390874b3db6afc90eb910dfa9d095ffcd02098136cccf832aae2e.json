{"ast":null,"code":"var _jsxFileName = \"D:\\\\Cursor\\\\Equity Tax\\\\src\\\\contexts\\\\AuthContext.tsx\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useContext, useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/createContext(undefined);\nexport const useAuth = () => {\n  _s();\n  const context = useContext(AuthContext);\n  if (context === undefined) {\n    throw new Error('useAuth must be used within an AuthProvider');\n  }\n  return context;\n};\n_s(useAuth, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nexport const AuthProvider = ({\n  children\n}) => {\n  _s2();\n  const [user, setUser] = useState(null);\n  const [loading, setLoading] = useState(true);\n  useEffect(() => {\n    // Check for existing session on app load\n    const savedUser = localStorage.getItem('user');\n    if (savedUser) {\n      setUser(JSON.parse(savedUser));\n    }\n    setLoading(false);\n  }, []);\n  const login = async (email, password) => {\n    setLoading(true);\n    try {\n      const response = await fetch(`${process.env.REACT_APP_API_URL || 'http://localhost:3001/api'}/auth/login`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          email,\n          password\n        })\n      });\n      if (!response.ok) {\n        const errorData = await response.json();\n        throw new Error(errorData.message || 'Login failed');\n      }\n      const data = await response.json();\n      setUser(data.data.user);\n      localStorage.setItem('user', JSON.stringify(data.data.user));\n      localStorage.setItem('token', data.data.token);\n    } catch (error) {\n      throw new Error(error instanceof Error ? error.message : 'Login failed');\n    } finally {\n      setLoading(false);\n    }\n  };\n  const signup = async (name, email, password) => {\n    setLoading(true);\n    try {\n      const response = await fetch(`${process.env.REACT_APP_API_URL || 'http://localhost:3001/api'}/auth/register`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          name,\n          email,\n          password\n        })\n      });\n      if (!response.ok) {\n        const errorData = await response.json();\n        throw new Error(errorData.message || 'Signup failed');\n      }\n      const data = await response.json();\n      setUser(data.data.user);\n      localStorage.setItem('user', JSON.stringify(data.data.user));\n      localStorage.setItem('token', data.data.token);\n    } catch (error) {\n      throw new Error(error instanceof Error ? error.message : 'Signup failed');\n    } finally {\n      setLoading(false);\n    }\n  };\n  const logout = async () => {\n    try {\n      // Call logout API endpoint\n      await fetch(`${process.env.REACT_APP_API_URL || 'http://localhost:3001/api'}/auth/logout`, {\n        method: 'POST',\n        headers: {\n          'Authorization': `Bearer ${localStorage.getItem('token')}`,\n          'Content-Type': 'application/json'\n        }\n      });\n    } catch (error) {\n      console.error('Logout API call failed:', error);\n    } finally {\n      // Always clear local data\n      setUser(null);\n      localStorage.removeItem('user');\n      localStorage.removeItem('token');\n    }\n  };\n  const value = {\n    user,\n    login,\n    signup,\n    logout,\n    loading\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: value,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 129,\n    columnNumber: 5\n  }, this);\n};\n_s2(AuthProvider, \"NiO5z6JIqzX62LS5UWDgIqbZYyY=\");\n_c = AuthProvider;\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useContext","useState","useEffect","jsxDEV","_jsxDEV","AuthContext","undefined","useAuth","_s","context","Error","AuthProvider","children","_s2","user","setUser","loading","setLoading","savedUser","localStorage","getItem","JSON","parse","login","email","password","response","fetch","process","env","REACT_APP_API_URL","method","headers","body","stringify","ok","errorData","json","message","data","setItem","token","error","signup","name","logout","console","removeItem","value","Provider","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["D:/Cursor/Equity Tax/src/contexts/AuthContext.tsx"],"sourcesContent":["import React, { createContext, useContext, useState, useEffect, ReactNode } from 'react';\r\n\r\ninterface User {\r\n  id: string;\r\n  email: string;\r\n  name: string;\r\n  role: 'user' | 'admin';\r\n  avatar?: string;\r\n}\r\n\r\ninterface AuthContextType {\r\n  user: User | null;\r\n  login: (email: string, password: string) => Promise<void>;\r\n  signup: (name: string, email: string, password: string) => Promise<void>;\r\n  logout: () => void;\r\n  loading: boolean;\r\n}\r\n\r\nconst AuthContext = createContext<AuthContextType | undefined>(undefined);\r\n\r\nexport const useAuth = () => {\r\n  const context = useContext(AuthContext);\r\n  if (context === undefined) {\r\n    throw new Error('useAuth must be used within an AuthProvider');\r\n  }\r\n  return context;\r\n};\r\n\r\ninterface AuthProviderProps {\r\n  children: ReactNode;\r\n}\r\n\r\nexport const AuthProvider: React.FC<AuthProviderProps> = ({ children }) => {\r\n  const [user, setUser] = useState<User | null>(null);\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  useEffect(() => {\r\n    // Check for existing session on app load\r\n    const savedUser = localStorage.getItem('user');\r\n    if (savedUser) {\r\n      setUser(JSON.parse(savedUser));\r\n    }\r\n    setLoading(false);\r\n  }, []);\r\n\r\n  const login = async (email: string, password: string) => {\r\n    setLoading(true);\r\n    try {\r\n      const response = await fetch(`${process.env.REACT_APP_API_URL || 'http://localhost:3001/api'}/auth/login`, {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify({ email, password }),\r\n      });\r\n      \r\n      if (!response.ok) {\r\n        const errorData = await response.json();\r\n        throw new Error(errorData.message || 'Login failed');\r\n      }\r\n      \r\n      const data = await response.json();\r\n      setUser(data.data.user);\r\n      localStorage.setItem('user', JSON.stringify(data.data.user));\r\n      localStorage.setItem('token', data.data.token);\r\n    } catch (error) {\r\n      throw new Error(error instanceof Error ? error.message : 'Login failed');\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const signup = async (name: string, email: string, password: string) => {\r\n    setLoading(true);\r\n    try {\r\n      const response = await fetch(`${process.env.REACT_APP_API_URL || 'http://localhost:3001/api'}/auth/register`, {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify({ name, email, password }),\r\n      });\r\n      \r\n      if (!response.ok) {\r\n        const errorData = await response.json();\r\n        throw new Error(errorData.message || 'Signup failed');\r\n      }\r\n      \r\n      const data = await response.json();\r\n      setUser(data.data.user);\r\n      localStorage.setItem('user', JSON.stringify(data.data.user));\r\n      localStorage.setItem('token', data.data.token);\r\n    } catch (error) {\r\n      throw new Error(error instanceof Error ? error.message : 'Signup failed');\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const logout = async () => {\r\n    try {\r\n      // Call logout API endpoint\r\n      await fetch(`${process.env.REACT_APP_API_URL || 'http://localhost:3001/api'}/auth/logout`, {\r\n        method: 'POST',\r\n        headers: {\r\n          'Authorization': `Bearer ${localStorage.getItem('token')}`,\r\n          'Content-Type': 'application/json',\r\n        },\r\n      });\r\n    } catch (error) {\r\n      console.error('Logout API call failed:', error);\r\n    } finally {\r\n      // Always clear local data\r\n      setUser(null);\r\n      localStorage.removeItem('user');\r\n      localStorage.removeItem('token');\r\n    }\r\n  };\r\n\r\n  const value = {\r\n    user,\r\n    login,\r\n    signup,\r\n    logout,\r\n    loading\r\n  };\r\n\r\n  return (\r\n    <AuthContext.Provider value={value}>\r\n      {children}\r\n    </AuthContext.Provider>\r\n  );\r\n};\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}